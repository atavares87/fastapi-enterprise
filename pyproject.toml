[project]
name = "fastapi-enterprise"
version = "0.1.0"
description = "Enterprise-grade FastAPI application with hexagonal architecture"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

# Core dependencies
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    # Database dependencies
    "sqlalchemy>=2.0.0",
    "sqlmodel>=0.0.14",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0", # PostgreSQL async driver
    "psycopg2-binary>=2.9.0", # PostgreSQL sync driver
    # MongoDB dependencies
    "motor>=3.3.0", # Async MongoDB driver
    "pymongo>=4.6.0",
    "beanie>=1.23.0", # ODM for MongoDB
    # Redis and caching
    "redis>=5.0.0",
    "hiredis>=2.2.0", # Redis performance improvement
    # Background tasks
    "celery>=5.3.0",
    "flower>=2.0.0", # Celery monitoring
    # Security and authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6", # Form data support
    # Utilities
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0", # Structured logging
    "httpx>=0.25.0", # HTTP client for external APIs
    "greenlet>=3.2.4",
    # Observability and monitoring
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "opentelemetry-exporter-prometheus>=0.42b0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-requests>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
    "opentelemetry-instrumentation-redis>=0.42b0",
    "opentelemetry-instrumentation-celery>=0.42b0",
    "opentelemetry-instrumentation-pymongo>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-propagator-b3>=1.21.0",
    "prometheus-client>=0.19.0",
]

# Development dependencies
[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",  # Parallel test execution
    "httpx>=0.25.0",  # For TestClient
    "fakeredis>=2.20.0",  # Redis mocking
    "mongomock>=4.1.0",  # MongoDB mocking

    # Code quality
    "mypy>=1.7.0",
    "ruff>=0.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "pre-commit>=3.6.0",

    # Security
    "bandit>=1.7.5",
    "safety>=2.3.0",

    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

# Build system
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Build configuration
[tool.hatch.build.targets.wheel]
packages = ["app"]

# Tool configurations
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API tests",
    "contract: Contract tests using Pact",
    "provider: Provider verification tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["app"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "celery.*",
    "kombu.*",
    "motor.*",
    "pymongo.*",
    "redis.*",
    "beanie.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "setup",
    "tests.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
profile = "black"
skip_gitignore = true

[tool.bandit]
exclude_dirs = ["tests", "migrations", "alembic"]
exclude = ["setup.py"]
skips = ["B101", "B107", "B104", "B404", "B602"]  # Skip common development warnings

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "bandit>=1.8.6",
    "black>=25.9.0",
    "fakeredis>=2.31.3",
    "isort>=6.0.1",
    "jsonschema>=4.25.1",
    "mongomock-motor>=0.0.36",
    "mypy>=1.18.2",
    "pact-python>=2.3.3",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "responses>=0.25.8",
    "ruff>=0.13.2",
]

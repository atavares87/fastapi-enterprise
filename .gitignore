# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# uv
.uv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include the directories below in gitignore.
.idea/

# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local configuration files
.env.local
.env.development.local
.env.test.local
.env.production.local

# Database
*.db
*.sqlite

# Logs
logs/
*.log

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# Docker
.dockerignore

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Project specific
/data/
/uploads/
/static/uploads/
/media/
*.backup
dump.rdb

# Security and secrets
.env*
!.env.example
!.env.template
*.key
*.pem
*.crt
*.p12
*.pfx
secrets/
.secrets/

# FastAPI specific
/static/
/files/
/temp/
/tmp/

# Database files
*.sqlite3
*.db
*.sqlite
*.db-journal
*.db-wal
*.db-shm

# Redis
dump.rdb
*.rdb

# MongoDB
mongod.lock

# PostgreSQL
postgresql.conf
*.conf

# Alembic
alembic/versions/*.pyc

# Celery
celerybeat-schedule*
celerybeat.pid*
worker.pid

# Testing
.pytest_cache/
.coverage*
htmlcov/
coverage.xml
.tox/
.nox/
test-results/
test-reports/
.testmondata

# Development tools
.ruff_cache/
.mypy_cache/
.black_cache/
.isort.cfg
.pre-commit-cache/

# IDEs and editors
.idea/
.vscode/
*.swp
*.swo
*~
.vim/
.emacs.d/
.sublime-*

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# Backup files
*.bak
*.backup
*.orig
*.tmp

# Documentation builds
docs/_build/
docs/build/
site/

# Profiling
*.prof
*.pstats

# Monitoring and logging
*.log*
logs/
log/

# Cache directories
.cache/
__pycache__/
.pytest_cache/
.ruff_cache/

# Build artifacts
build/
dist/
*.egg-info/

# Virtual environments (additional patterns)
venv*/
env*/
.venv*/
.env*/

# Package managers
node_modules/
.pnp.*
.yarn/
package-lock.json
yarn.lock

# Cloud and deployment
.terraform/
*.tfstate*
.ansible/
kubernetes-manifests.yaml

# Local development overrides
docker-compose.override.yml
.local/
local_settings.py

# Performance monitoring
newrelic.ini
.newrelic/

# API documentation
openapi.json
redoc-static.html

# File uploads and user content
uploads/
user_uploads/
media/
static/media/

# Temporary files
*.tmp
*.temp
.tmp/
temp/

security-report.json
coverage.xml
